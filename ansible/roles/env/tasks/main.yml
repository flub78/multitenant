# Ansible setup environment file

    - name: Setup .env file
      debug: 
        msg:
          - "APP_URL = {{ app_url }}"
          - "INSTALLATION_PATH = {{ installation_path }}"
          - "Welcome to the Multitenant Web Application Framework installation"

    - name: create .env
      copy:
         src: '{{installation_path}}/.env.example'
         dest: '{{env_file}}'
         remote_src: true

    - name: setup host in .env
      lineinfile:
         dest:  '{{env_file}}'
         regexp: 'DB_HOST'
         line: "DB_HOST=localhost"
         
    - name: setup database in .env
      lineinfile:
         dest:  '{{env_file}}'
         regexp: 'DB_DATABASE'
         line: "DB_DATABASE={{db_database}}"

    - name:  setup database user in .env
      lineinfile:
         dest:  '{{env_file}}'
         regexp: 'DB_USERNAME'
         line: "DB_USERNAME={{db_username}}"

    - name:  setup database password in .env
      lineinfile:
         dest:  '{{env_file}}'
         regexp: 'DB_PASSWORD'
         line: "DB_PASSWORD={{db_password}}"

    - name:  setup application key in .env
      lineinfile:
         dest:  '{{item}}'
         regexp: '^APP_KEY='
         line: "APP_KEY=base64:VAuDJGfFIbKrDiSDg+Wjxh4uf4fitNEaZO0zuHOtuWk="
      with_items:
        - '{{env_file}}'

    - name:  setup translate_api_key in .env
      lineinfile:
         dest:  '{{item}}'
         regexp: '^TRANSLATE_API_KEY='
         line: "TRANSLATE_API_KEY={{translate_api_key}}"
      with_items:
        - '{{env_file}}'

    # setup APP_URL in .env
    # phpunit tests do not run with a domain ???
    - name:  setup APP_URL in .env
      lineinfile:
         dest:  '{{env_file}}'
         regexp: 'APP_URL'
         line: "APP_URL={{app_url}}"

    - name:  setup APP_NAME in .env
      lineinfile:
         dest:  '{{env_file}}'
         regexp: 'APP_NAME'
         line: "APP_NAME=Multi"

    # --------------------------------------------------------------------------------------------------------         
    # set .env.testing

    - name:  create .env.testing
      copy:
         src: '{{env_file}}'
         dest: '{{test_env_file}}'
         remote_src: true
         
    - name:  setup database in .env
      lineinfile:
         dest:  '{{test_env_file}}'
         regexp: 'DB_DATABASE'
         line: "DB_DATABASE={{db_database}}"

    # --------------------------------------------------------------------------------------------------------
    # set .env.dusk.tenants
    - name:  create .env.dusk.tenants
      copy:
         src: '{{test_env_file}}'
         dest: '{{installation_path}}/.env.dusk.tenants'
         remote_src: true

    - name:  setup APP_URL in .env.dusk.tenants
      lineinfile:
         dest:  '{{installation_path}}/.env.dusk.tenants'
         regexp: 'APP_URL'
         line: "APP_URL={{tenant_url}}"
         
    - name:  adding test login in .env.dusk.tenants
      lineinfile:
         dest:  '{{installation_path}}/.env.dusk.tenants'
         line: '{{item}}'
      with_items:
        - ''
        - 'TEST_LOGIN=frederic.peignot@free.fr'
        - 'TEST_PASSWORD=password'
